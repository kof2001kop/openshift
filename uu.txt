tg://proxy?server=168.62.170.218&port=443&secret=ee000000000000000000000000000000017777772e62696e672e636f6d

https://www.sehuatang.net/forum.php?mod=viewthread&tid=354284&extra=page%3D1&mobile=2

fa539bed-ca6a-4f46-b178-e81d759ba2b6
kof2001koP-

http://sub.yahahanpo.top/link/i2JWNyGEawntYyA7?mu=1

https://dl-ssl.google.com/android/repository/platform-tools_r23.0.1-linux.zip

public static void unZip(String inputZip, String destinationDirectory) throws IOException 
    {
		 
		int BUFFER = 2048;
	    List zipFiles = new ArrayList();
	    File sourceZipFile = new File(inputZip);
	    File unzipDestinationDirectory = new File(destinationDirectory);
	    unzipDestinationDirectory.mkdir();

	    ZipFile zipFile;
	    // Open Zip file for reading
	    zipFile = new ZipFile(sourceZipFile, ZipFile.OPEN_READ);

	    // Create an enumeration of the entries in the zip file
	    Enumeration zipFileEntries = zipFile.entries();

	    // Process each entry
	    while (zipFileEntries.hasMoreElements()) {
	        // grab a zip file entry
	        ZipEntry entry = (ZipEntry) zipFileEntries.nextElement();

	        String currentEntry = entry.getName();

	        File destFile = new File(unzipDestinationDirectory, currentEntry);

	        if (currentEntry.endsWith(".zip")) {
	            zipFiles.add(destFile.getAbsolutePath());
	        }

	        // grab file's parent directory structure
	        File destinationParent = destFile.getParentFile();

	        // create the parent directory structure if needed
	        destinationParent.mkdirs();

	        try {
	            // extract file if not a directory
	            if (!entry.isDirectory()) {
	                BufferedInputStream is =
	                        new BufferedInputStream(zipFile.getInputStream(entry));
	                int currentByte;
	                // establish buffer for writing file
	                byte data[] = new byte[BUFFER];

	                // write the current file to disk
	                FileOutputStream fos = new FileOutputStream(destFile);
	                BufferedOutputStream dest =
	                        new BufferedOutputStream(fos, BUFFER);

	                // read and write until last byte is encountered
	                while ((currentByte = is.read(data, 0, BUFFER)) != -1) {
	                    dest.write(data, 0, currentByte);
	                }
	                dest.flush();
	                dest.close();
	                is.close();
	            }
	        } catch (IOException ioe) {
	            ioe.printStackTrace();
	        }
	    }
	    zipFile.close();

	    for (Iterator iter = zipFiles.iterator(); iter.hasNext();) {
	        String zipName = (String)iter.next();
	        unZip(
	            zipName,
	            destinationDirectory +
	                File.separatorChar +
	                zipName.substring(0,zipName.lastIndexOf(".zip"))
	        );
	    }
	    
    }
